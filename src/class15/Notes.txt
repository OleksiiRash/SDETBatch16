Methods:
    in Java, a method is a block of code or a collection of statements that
    perform a specific task. It is designed to perform a particular function or
    piece of logic within a program. We can create a method and then call it
    multiple times from different parts of the program rather than repeating the
    same block of code in multiple places Methods in
    java have return types(output of a method) for example void,String int char etc.
    they can also take parameters(input). parameters can of primitive
    and non-primitive. The body of the method can contain any logic like arrays
    loops switch.
why we should use methods?
        1) Code re-usability
        2) Organize the code
        3) changing code becomes easier.
how to create method in java?
=====================================================================
Types of variables w.r.t scope(coverage, reach,the visibility and accessibility)
    There are three types of variables with respect to scope:

   local
   instance
   static variables.

local variables:
    local variables are created inside block of codes they can only be accessed
    with that block for example all the variables that we create inside
    methods, if statements, switch case statements, loops etc.

Upside:
    1)local variables stay shorter in the memory the moment that block
    of code is done executing memory is freed and is available to be re-used.
    2) We can re-use the same name for other variables in other blocks of code.
Downside:
    They have limited visibility. They can't be used outside of the block in which
    they are created.
    2)Initialization is mandatory for local variables, and failure to do so
    results in a compilation error.

instance variables:

    instance variables are created outside any block of code like method,
    loop,if statement etc. but they are inside a class.

Upside:
    1) Instance variables Can be used without initialing.
    2) instance variables can be shared between all instance methods of a class.
Downside:
    1)They tend to occupy the memory for longer as compared to local variables.
    2) They are hard to debug.

static variables:
    all the instance variables with static keyword are called static variables.
Upside:
    1) They can be shared across instances static methods and
    the instances of a class.
    2) only one memory location is reserved for static variables even though we
    create 1 million objects of that class.
downSide:
    1) They code can be hard to debug we we don't use the final keyword.
    2) If value is changed anywhere in the code that gets changed for the complete
    application.
when we should use local variables:
    Always when ever possible.
when we should use instance variables:
    1) If we have to share something in more than 1 instance methods.
    2) When we are planning to create multiple objects of a class and these objects
    can have different values for different objects we should go with instance variables
when we should use static variables:
    1) when we want to share something globally in all the classes methods blocks of code.
    2) Mostly used to create constants like no of months no of days value of PI value of G etc.
    -----------------------------------------------------------------------------------------------
    In Java, there are four types of methods based on their return type and parameter list:

    1. void Method with no return value and no parameter:
    Example: public void printHelloWorld() {}

    2. Method with a return value and no parameter:
    Example: public int getRandomNumber() {}

    3. Method with no return value but with parameters:
    Example: public void printFullName(String firstName, String lastName) {}

    4. Method with a return value and parameters:
    Example: public int addNumbers(int num1, int num2) {}
    -----------------------------------------------------------------------------------------------
    In Java, there are four access modifiers that can be applied to methods:

    1. Public methods can be accessed from any class in any package.
    2. Private methods, on the other hand, can only be accessed within the same class.
    3. Protected methods can be accessed from classes in the same package or subclasses in other packages.
    4. Default (no modifier) methods can be accessed from classes in the same package.
    -----------------------------------------------------------------------------------------------
    In Java, there are three types of variables: local, instance, and static variables.

    1. Local variables are declared inside a method or a block, and their scope is limited to the method or block in which they are declared.
    Local variables must be initialized before they can be used.

    2. Instance variables are declared inside a class but inside methods or blocks.
    Each object of the class has its own copy of the instance variables, which can be accessed and modified using the object reference.
    Instance variables are initialized to their default values when an object is created.

    3. Static variables are also declared inside a class but outside any method or block, and they are marked with the keyword "static".
    Unlike instance variables, static variables are shared among all objects of the class.
    Static variables are initialized to their default values when the class is loaded into the JVM.
    Static variables can be accessed using the class name or the object reference.













